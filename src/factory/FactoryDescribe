这里使用工厂方法模式的注意点：
** 工厂方法创建对象**：
工厂方法不一定每一次都返还一个新的对象，但是它所返还的对象一定是它自己创建的。

工厂方法返还的类型：
注意：工厂方法返还的应当是抽象类型，而不是具体类型，只有这样才能保证针对产品的多态性。当工厂方法模式发生上面的退化时，就不再是工厂方法模式了。

工厂等级结构：
工厂对象应当有一个抽象的超类型。换言之，应当有数个具体工厂类作为一个抽象超类型的具体子类存在于工厂等级结构中。如果等级结构中只有一个具体工程类的话，那么抽象工厂角色也可以省略，这时候，工厂方法模式就发生了退化，这一退化表现为针对工厂角色的多态性的丧失。

总结

工厂方法模式和简单工厂模式比较：
工厂方法模式跟简单工厂模式在结构上的不同是很明显的，工厂方法模式的核心是一个抽象工厂类，而简单工厂模式的核心在一个具体类。显而易见工厂方法模式这种结构更好扩展，权力下发，分布式比集中式更具优势。

